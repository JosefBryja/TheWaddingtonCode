---
title: "Why and How to Write a Blog as an Experimental Biologist/Bioinformatician?"
image: thumbnail.png
author: "Josef Bryja"
date: "2025-06-29"
categories: [news, tutorial, Quarto]
freeze: false
---

# Why?

## My Short Backstory

Hello, my name is Josef and this is the first post on my blog "The Waddington Code" (I will explain the name in some other post). I will try to explain why I started this project and how I did it. Let me start with my story. I was always interested in animals and nature in general. When I got accepted to Masaryk University in Brno, I started studying experimental and molecular biology. During my master's studies, I shifted my focus more towards immunology and cell-ECM interactions. However, I felt that this wasn't what I really wanted. After finishing my master's degree, I started my Ph.D. in developmental biology. I have to say that this field feels right for me. However, there was one small catch -- I did not have any knowledge about animal development.

In addition to that, I am very interested in bioinformatics and looking for patterns in various types of data. For some time I was the only "bioinformatician" in my new lab, so developmental biology was not the only thing I needed to get deeper into.


## So Why to Bother with a Blog?

During the last year, since I started my Ph.D. studies, I had to (and will have to) learn many new things. I found out that the most effective way to understand a topic is to explain it to other people. However, these other people do not always have time or are simply not interested in my oversimplified explanations of complex phenomena or algorithms. And here comes blog writing. I do not force anyone to read this. I am just taking notes to understand things better or keep track of ideas that I find interesting. And who knows, maybe someone will find it useful or I will get some feedback so I can improve my skills or gain more knowledge.

# How?

## Concept

It is very easy to say: "I will just write a blog, you know." Well, it is not that simple. You need to do it somehow. And I really like the idea of open-source software, which kind of limits the options. Anyway, there are quite a number of alternatives to commercial software. So my idea is to choose something that will help me even in other parts of my work.

## Quarto

Do you know RMarkdown? Quarto is built on that and it is basically RMarkdown on steroids. It is very easy to write multi-language scripts or create various types of documents from reports, presentations, websites, or books. What is a small difference from standard RMarkdown is that you need to install Quarto as separate software. But trust me, it is worth it. To be completely honest, I was a bit lazy to learn Quarto because RMarkdown was always sufficient for my purposes. This is the reason why I chose Quarto for my blog: to learn something new. The basic syntax is still basically pure markdown, so it is really easy to just jump in. I mentioned above that Quarto supports many types of output documents, and there is also one dedicated to blogs. The Quarto team made it very simple to use this template and they also provide a pretty straightforward tutorial. Basically, all you need to do is:

```bash 
quarto create project blog thewaddingtoncode
```
And you are good to go. The rest is on [Quarto website](https://quarto.org/docs/websites/website-blog.html).


## GitHub Pages

Quarto is amazing for creating these markdown-based documents and rendering them. However, when you are writing a blog, you also want to publish it. Quarto actually offers so-called Quarto Pub, which you can use to publish your blog or website. However, I decided that I would use GitHub Pages for this purpose since I always wanted to try it. There are several ways how to do it. I used a quite simple approach. First, I created a git repository that is linked to GitHub. After creating a GitHub repository and linking it with my local git repository, I went back to the terminal. At this point, you need to check that your `_quarto.yml` file contains the following lines:

```markdown
project:
  type: website
  output-dir: docs
```

Once this was done, I could run following command and push everything on github. This create `docs` file and render the website.

```bash
quarto render
```

The last thing I did to publish this post (and the whole blog) was to go to my GitHub repository settings â†’ Pages and set the deployment from a branch like this:

![](GitHubPages.png)

With this, my blog was ready to start.
